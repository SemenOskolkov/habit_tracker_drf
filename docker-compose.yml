version: "3"

services:
  db:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "habits_drf"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  celery-worker:
    build: .
    container_name: celery-worker
    command: celery -A config worker -l info
    depends_on:
      api:
        condition: service_started

  celery-beat:
    build: .
    container_name: celery-beat
    command: celery -A config beat -l info -S django
    depends_on:
      celery-worker:
        condition: service_started

  nginx:
    container_name: nginx
    image: nginx
    volumes:
      - ./static:/etc/nginx/templates
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started


  api:
    container_name: api
    build:
      context: .
    links:
      - db
    command: bash -c "
      python3 manage.py migrate 
      && python3 manage.py collectstatic --noinput
      && gunicorn config.wsgi --access-logfile - --workers 3 --bind 0.0.0.0:8000
      "
    tty: false
    volumes:
      - .:/code
    restart: on-failure
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
